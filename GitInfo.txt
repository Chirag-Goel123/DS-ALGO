VCS:
1 git config --global user.name "abc"
  git config --global user.email "abc.com"
  
2 git init

3 git add : 
  File changes are done.
  Ab Git app isko track kro.
  So git will add this file into the staging area.
  In stagin area, we can cross-check our changes before commit.

4 git commit -m ""
  To put the changes in the local Git Repo

5 git log 
  Will provide the log of all the commit.

6 git diff 
  Will provide the comparison of 2 file.

7 To check the changes in one File only which we did in the previous commit..
  git log 
  -> Take the commit id
  git show commitid:fileName

8 To check the changes in all the files which we did 
  git log
  -> Take the commit id
  git checkout comitId -- *
  -> If we want to go to latest changes : git checkout master(branchName) -- *

9 git restore :
  -> If in unstaged area : git restore <fileName>
  -> If in staged area :  Bring back to staged area and restore it.
	git restore --staged <fileName>
	git restore <fileName>
  -> If in the commit area :
	git reset --soft HEAD^
		OR
	git reset --hard HEAD^
     
	Note : 	In soft : Uncommit ho jaega but wrong changes rhengye.
		In Hard : Uncommit ho jaega but changes hat jaengye..


10 Filter in git log command : Logging in Git
    -> git log -p -1 
       To see the last one commit and -p means patch to see the difference also
    -> git log --stat
        To see the summary about the changes and only the files which are changed.
    -> git log --pretty=oneline
        To see the log in one line

11 git pull

12 Git Branch and Merge
    1 Create a new branch : git branch New-Branch-name
    2 Checkout :            git checkout New-Branch-name
    3 Merge from main to branchA:
                Pull from main:
                            git checkout main       
                            git pull
                Checkout to branchA :
                            git checkout branchA
                Merge :
                            git merge main

13 Fork : Like contributing in the opensource.
    1 Fork the project.
    2 Do the change
    3 Raise the PR to that project
    4 We can sync the fork as well

14 Git ignore :
    1 create a file .gitignore
    2 Add the files info which you do not want to commit.
